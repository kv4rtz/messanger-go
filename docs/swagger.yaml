definitions:
  controllers.ResponseToken:
    properties:
      token:
        type: string
    type: object
  models.Chat:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      messages:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      name:
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Message:
    properties:
      chatId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      text:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userId:
        type: integer
    type: object
  models.User:
    properties:
      avatar:
        type: string
      chats:
        items:
          $ref: '#/definitions/models.Chat'
        type: array
      createdAt:
        type: string
      id:
        type: integer
      login:
        type: string
      messages:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      password:
        type: string
      updatedAt:
        type: string
    type: object
  utils.ResponseMessage:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: Документация для Messenger REST API
  title: Messenger API Documentation test
  version: "1.0"
paths:
  /auth/check:
    get:
      consumes:
      - application/json
      description: Check Authorization Token
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Check authorization token
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ResponseToken'
      summary: Login
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new account
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          type: string
      - description: Login
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Avatar
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ResponseToken'
      summary: Register
      tags:
      - Authentication
  /chats:
    get:
      consumes:
      - application/json
      description: Get user chats
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Chat'
            type: array
      summary: Get user chats
      tags:
      - Chats
    post:
      consumes:
      - application/json
      description: Create a new chat
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Chat name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
      summary: Create chat
      tags:
      - Chats
  /chats/{id}:
    get:
      consumes:
      - application/json
      description: Get a chat by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Chat ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Chat'
      summary: Get a chat by id
      tags:
      - Chats
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - Users
swagger: "2.0"
